{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww38200\viewh21600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs58 \cf0 	J2SE - Java 2 Standard Edition (Core Java)\
	J2EE - Java 2 Enterprise Edition (Advanced Java)\

\f1\b\fs82 \
https://github.com/PriteshGajjarJava/advJava2025/
\f0\b0\fs58 \
\
Types of applications:\
	- 
\f1\b Web Application
\f0\b0 		- facebook.com, twitter.com, gmail.com \
	- Mobile Application	 	- Mail, Contact, Games\
	- Desktop Application 	- Word, Notepad, Editor \
\
Client side technologies  - HTML, CSS, JavaScript, jQuery, (Angular, React, View Js)\
Server side technologies	- python, java, Ruby, Go, C++ (J2EE Spring)\
Middleware - Database (JDBC, ORM- Hibernate)\
\
Server side :\
	JSP, Servlet, Session, Cookies, How HTTP protocol works?\
	REST API\
\
DB:\
 MySQL, JDBC, Hibernate \
\

\f1\b List of softwares
\f0\b0 :\
	- JDK 11\
	- Web server (Tomcat zip)\
	- VS Code (Editor)\
	- Latest version of Chrome and Firefox\
	- MySQL/PostgreSQL/Oracle (MySQL workbench)\
	- Eclipse JEE\
\

\f1\b \
HTML \
-
\f0\b0  Hypertext Markup Language \
- Used to build static web page.\
- It defines \'93Structure\'94 of a webpage\
- Latest version is HTML5\

\f1\b - 
\f0\b0 File extension is \'93.html\'94\

\f1\b \
CSS\
- 
\f0\b0 Cascading StyleSheet\
- It gives style to your web page. \
- It helps to beautify webpage. It controls look & feel of your webpage.\
- Color, Positioning, Font, Placement \
- We can write CSS in different ways.\
	a) Inline CSS - Written witting tag itself using \'93style\'94 attribute. e.g. <div style=\'93text-align:center\'94> \'85 </div> \
	b) CSS class - We can add CSS class inside <head> => <style> tag. We write this using dot (.) e.g.   \
		.cetner-align \{ \'85 \}\
	c) ID based CSS - We can add CSS for particular ID\'92s using #\
- File extension : If we have to externalize CSS code then separate file can be written using \'93.css\'94 extension.\

\f1\b \
JavaScript:\
- 
\f0\b0 It defines \'93Behavior\'94 of your web page.
\f1\b \

\f0\b0 - Using JS we can build \'93dynamic\'94 web page.\
- JS is used to add validations, DOM manipulation, dynamic CSS changes\
- It is also used to make AJAX call (API call)\
- Node JS - Special package of JS which can be used for server side programming.\

\f1\b \
Session:\
- 
\f0\b0 HTTP is state-less protocol.\
- Request \'93n\'94 doesn\'92t have any information about previous request \'93n-1\'94.\
- If we have to store data between multiple requests, \'93Session\'94 memory can be used.\
- Session is type of storage on server side (Server side memory)\
- Data required across requests can be stored in the session.\
e.g. Shopping WebSite\
Step : You added \'93shoes\'94 to cart (Shoes info get stored in session)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Step 2: You added \'93t-shirt\'94 to cart (T-Shirt info get stored in session)\
Step 3: Go to cart -> Pay bill -> For summary you would access data from session and calculate the bill\
\
- Session data is \'93key-value\'94 pair\
- In JSP \'93session\'94 is in-built variable\
- On Servlet -> you can get session object using \'93request.getSession()\'94\
\
- To add data in session : \'93session.setAttribute(key, value)\'94\
- To read data from session : \'93session.getAttribute(key)\'94\
\
- Session memory get destroyed when you close the browser OR Logout.\
\
- If 100 users login to a site, then there will be 100 different sessions on the server side.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
Cookie:\
- 
\f0\b0 Cookie is small piece of information, generated by a server and stored on client side inside browser.\
- Cookies have age (seconds, min, hrs, years, no expiry)\
- Every browser has cookie storage. It stores cookie information domain (website) wise.\
- For every HTTP response: Browser checks if there are cookies in the response. If Yes, browser will add that cookie inside browser storage.\
- For every HTTP request: Browser check if there are existing valid cookie in browser storage, if yes those cookies will be sent in HTTP request.\
- Best example of cookie is: \'93JSESSION_ID\'94. For login request, once authentication is successful - server generate cookie named \'93JSESSION_ID\'94 and send in HTTP response. From next request browser would send JSESSION_ID to server which helps server to identify user.\
- Cookies are browser and site specific.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}